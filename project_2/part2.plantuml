@startuml
title Expense Tracker - Class Diagram

'=========================
' CORE ACTORS & ENTITIES
'=========================
class Customer {
  - customerId
  - name
  - email
  - passwordHash
  - occupation
  - salary
  + signUp()
  + signIn()
  + updateProfile()
  + viewDashboard()
}

class Account {
  - accountId
  - createdDate
  + getExpenses()
  + getBudgets()
  + getGoals()
  + calculateTotals()
}

class Expense {
  - expenseId
  - amount
  - date
  - note
  + createExpense()
  + editExpense()
  + deleteExpense()
}

class Category {
  - categoryId
  - name
  - type
  - budgetLimit
  + addCategory()
  + updateCategory()
  + deleteCategory()
}

class Budget {
  - budgetId
  - limit
  - period
  - spentAmount
  + calculateRemaining()
  + checkThreshold()
}

class Goal {
  - goalId
  - title
  - targetAmount
  - savedAmount
  - deadline
  - progress
  + trackProgress()
  + notifyGoalStatus()
}

class Reminder {
  - reminderId
  - billName
  - amount
  - dueDate
  - note
  - status
  + createReminder()
  + sendReminder()
  + markAsPaid()
}

class Notification {
  - notificationId
  - type
  - message
  - timestamp
  - status
  + sendNotification()
  + archiveNotification()
}

class Report {
  - reportId
  - startDate
  - endDate
  - summary
  + generateReport()
  + exportCSV()
}

class Dashboard {
  - dashboardId
  - charts
  - totals
  - progress
  + generateCharts()
  + displayData()
}

'=========================
' CONTROLLERS / SERVICES (for sequence + expansion)
'=========================
class AuthController {
  + signUp()
  + signIn()
}

class ExpenseController {
  + addExpense()
  + deleteExpense()
  + searchExpense()
  + filterExpense()
}

class DashboardController {
  + loadDashboard()
}

class CategoryController {
  + manageCategories()
}

class BudgetController {
  + setBudget()
  + checkBudgetStatus()
}

class GoalController {
  + createGoal()
  + updateGoalProgress()
}

class ReportController {
  + generateReport()
  + exportData()
}

class NotificationController {
  + createNotification()
  + sendAlert()
}

class ReminderController {
  + createReminder()
  + triggerReminder()
}

'=========================
' ASSOCIATIONS
'=========================
Customer "1" -- "1" Account
Account "1" -- "*" Expense
Account "1" -- "*" Category
Account "1" -- "*" Budget
Account "1" -- "*" Goal
Account "1" -- "*" Report
Customer "1" -- "*" Reminder
Customer "1" -- "*" Notification
Dashboard "1" --> Account
Expense "*" --> Category
Budget "1" --> Category
Goal "1" --> Expense
Report "1" --> Expense
Notification "1" --> Customer
Reminder "1" --> Expense : converts to after paid

'=========================
' CONTROLLER RELATIONSHIPS
'=========================
Customer --> AuthController
AuthController --> Account
ExpenseController --> Expense
CategoryController --> Category
BudgetController --> Budget
GoalController --> Goal
ReportController --> Report
DashboardController --> Dashboard
NotificationController --> Notification
ReminderController --> Reminder

@enduml
